name: Manual Release Electron App

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g. 1.0.0)'
        required: true
        type: string
      draft:
        description: 'Create a draft release'
        required: false
        type: boolean
        default: false

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: app/package-lock.json
      
      - name: Set Version
        id: set-version
        working-directory: ./app
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libnotify-dev libgconf-2-4 libnss3

      - name: Update Version
        working-directory: ./app
        run: npm version ${{ needs.prepare.outputs.version }} --no-git-tag-version

      - name: Install Dependencies
        working-directory: ./app
        run: |
          npm ci
          npm run rebuild

      - name: Build Application
        working-directory: ./app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run make

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: friday-electron-${{ matrix.os }}-${{ needs.prepare.outputs.version }}
          path: |
            app/out/make/**/*.deb
            app/out/make/**/*.rpm
            app/out/make/**/*.zip
            app/out/make/**/*.dmg
            app/out/make/**/*.exe
            app/out/make/**/*.AppImage
          if-no-files-found: error

  release:
    needs: [prepare, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.prepare.outputs.version }}
          name: Release v${{ needs.prepare.outputs.version }}
          draft: ${{ inputs.draft }}
          files: artifacts/**/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}